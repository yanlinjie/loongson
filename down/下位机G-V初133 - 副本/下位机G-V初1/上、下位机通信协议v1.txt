
  波特率：
  8数据位
  1停止位
  无奇偶校验
  无硬件控制流

                              帧头：0x5E （“^”）    帧尾：0x5F  （“_“）     
					---  数据位指令大全 ---

	0x41:   去二维码处  （“A”）
	0x42:   去原料区      （“B”）
	
	0x43:   去粗加工区红圆环处   （“C”）
	0x44:   去粗加工区绿圆环处    （“D”）
	0x45:   去粗加工区蓝圆环处    （“E”）   各批次搬运时首次到达需要校正
	0x4c:   去暂存区红圆环处       （“L”）
	0x4d:  去暂存区绿圆环处       （“M”）
	0x4e:  去暂存区蓝圆环处        （“N”）  各批次搬运时首次到达需要校正    
 	0x4f：扫码成功，告诉车子可以启动
	0x46:   回起点	  （“F”）
	0x4a:   暂存区到粗加工红圆环处   （“J”） 需要校正
                0x4b:   粗加工到原料区    （“K”）
                0x50:   允许底盘进行校准  （“P”）
备注： 	上位机从一个区到下一个区，“就近”到达，比如原料区到粗加工，上位机直接发去粗加工蓝圆环处，
	粗加工到暂存区，上位机直接发去暂存区蓝圆环处，
	到达后，双方通信进行openmv末端校正,
	随后上位机根据二维码任务顺序，发送去各圆环处的指令，每次到达后，
	下位机都发  "^@_"  ，上位机接受到后，再发下一个圆环处。
                .... 圆环校正的话，先写成各批次搬运时首次到达需要校正吧；先看看效果，不行的话，再改成每个放置圆环都校正
================================================================================
0x47   "^G_"  :  告诉上位机,下位机指令已经接受完毕 
0x40   "^Q_"  ： 告诉上位机已经到位置了
0x48   "^H_"  ： 起点平移出来, 告诉上位机调用扫二维码的动作(说明:提前做好动作, 经过扫二维码处就可扫描) 
0x49   "^I_"  ： 告诉上位机做好小车校正的机械臂动作
0x72   "^r_"   : 告诉上位机识别到红色物料
0x67   "^g_"  :告诉上位机识别到绿色物料
0x62   "^b_"  :告诉上位机识别到蓝色物料		
			






		   x_C_r = x_C_g,   // 粗加工区的 x 坐标值   r1
		   y_C_r = y_C_g-150,   //  粗加工区的 y 坐标值   r1
			 x_C_g = 1977,   // 粗加工区的 x 坐标值   g1
	     y_C_g = 895+150,   // 粗加工区的 y 坐标值   g1
			 x_C_b = x_C_g,   // 粗加工区的 x 坐标值 b1
			 y_C_b = y_C_g+150,   // 粗加工区的 y 坐标值  b1
	
				x_D_r = x_D_g+150,   // 暂存区的 x 坐标值    r2
				y_D_r = y_D_g,   // 暂存区的 y 坐标值    r2
			  x_D_g = 1210-150,   // 暂存区的 x 坐标值     g2
		    y_D_g = 1832,   // 暂存区的 y 坐标值     g2
				x_D_b = x_D_g-150,   // 暂存区的 x 坐标值  b2
				y_D_b = y_D_g   // 暂存区的 y 坐标值   b2
											